package {{.tableName}}

import (
	"github.com/coder2m/component/xlog"
	_map "{{.ProjectName}}/internal/{{.appName}}/map"
	"{{.ProjectName}}/internal/{{.appName}}/model/{{.tableName}}"
)

func GetAllServer(page _map.PageList) (data []{{.tableName}}.{{.TableName}}, total int64, err error) {
	data = make([]{{.tableName}}.{{.TableName}}, 0)
	total, err = new({{.tableName}}.{{.TableName}}).Get(page.PageSize*(page.Page-1), page.PageSize, &data, nil, page.IsDelete)
	if err != nil {
		xlog.Errorw("{{.tableName}} GetAllServer", err.Error())
	}
	return
}

func AddServer(add _map.{{.TableName}}AddServer) (err error) {
	//todo 添加手动赋值
	data := &{{.tableName}}.{{.TableName}}{

	}
	err = data.Add()
	if err != nil {
		xlog.Errorw("{{.tableName}} AddServer", err.Error())
	}
	return
}

func GetByIdServer(idMap _map.IdMap) (data *{{.tableName}}.{{.TableName}}, err error) {
	data = new({{.tableName}}.{{.TableName}})
	data.{{.Id}} = idMap.Id
	err = data.GetById()
	if err != nil {
		xlog.Errorw("{{.tableName}} GetByIdServer", err.Error())
	}
	return
}

func PutByIdServer(put _map.{{.TableName}}PutServer) (err error) {
	//todo 修改手动赋值
	data := &{{.tableName}}.{{.TableName}}{

	}
	err = data.UpdateById()
	if err != nil {
		xlog.Errorw("{{.tableName}} PutByIdServer", err.Error())
	}
	return
}

func DelServer(idMap _map.IdMap) (err error) {
	err = new({{.tableName}}.{{.TableName}}).Del(map[string]interface{}{"{{.id}}=?": idMap.Id})
	if err != nil {
		xlog.Errorw("{{.tableName}} DelServer", err.Error())
	}
	return
}

func RecDelServer(idMap _map.IdMap) (err error) {
	data := new({{.tableName}}.{{.TableName}})
	data.{{.Id}} = idMap.Id
	err = data.DelRes()
	if err != nil {
		xlog.Errorw("{{.tableName}} RecDelServer", err.Error())
	}
	return
}
